Starting audit...
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\common\Contract.java:69:5: Class 'Contract' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contract' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\common\Contract.java:71:28: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\common\Contract.java:72:50: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\common\Contract.java:73:46: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\common\Contract.java:74:36: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\common\Contract.java:75:70: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\common\Update.java:66:5: Class 'Update' looks like designed for extension (can be subclassed), but the method 'getProducerChanges' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Update' final or making the method 'getProducerChanges' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\common\Update.java:70:5: Class 'Update' looks like designed for extension (can be subclassed), but the method 'setProducerChanges' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Update' final or making the method 'setProducerChanges' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\common\Update.java:74:5: Class 'Update' looks like designed for extension (can be subclassed), but the method 'updateProducers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Update' final or making the method 'updateProducers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\common\Update.java:74:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\common\Update.java:76:13: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\common\Update.java:76:16: '(' is followed by whitespace. [ParenPad]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\common\Update.java:84:5: Class 'Update' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Update' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\common\Update.java:86:26: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\common\Update.java:87:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\common\Update.java:88:64: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\common\Update.java:89:58: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\consumer\InputConsumer.java:25:46: 'id' hides a field. [HiddenField]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\consumer\InputConsumer.java:25:61: 'budget' hides a field. [HiddenField]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\consumer\InputConsumer.java:25:80: 'monthlyIncome' hides a field. [HiddenField]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\consumer\InputConsumer.java:111:23: 'contract' hides a field. [HiddenField]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\consumer\InputConsumer.java:122:18: 'contract' hides a field. [HiddenField]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\consumer\InputConsumer.java:144:5: Class 'InputConsumer' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputConsumer' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\consumer\InputConsumer.java:146:33: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\consumer\InputConsumer.java:147:28: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\consumer\InputConsumer.java:148:46: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\consumer\InputConsumer.java:149:38: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\consumer\InputConsumer.java:150:52: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\consumer\InputConsumer.java:151:42: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:39:46: 'id' hides a field. [HiddenField]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:39:61: 'contractLength' hides a field. [HiddenField]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:39:88: 'budget' hides a field. [HiddenField]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:40:46: 'infrastructureCost' hides a field. [HiddenField]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:41:46: 'energyNeededKW' hides a field. [HiddenField]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:41:75: 'producerStrategy' hides a field. [HiddenField]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:54:46: 'id' hides a field. [HiddenField]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:54:61: 'infrastructureCost' hides a field. [HiddenField]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:55:46: 'productionCost' hides a field. [HiddenField]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:124:5: Class 'InputDistributor' looks like designed for extension (can be subclassed), but the method 'getEnergyNeededKW' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputDistributor' final or making the method 'getEnergyNeededKW' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:128:5: Class 'InputDistributor' looks like designed for extension (can be subclassed), but the method 'setEnergyNeededKW' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputDistributor' final or making the method 'setEnergyNeededKW' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:132:5: Class 'InputDistributor' looks like designed for extension (can be subclassed), but the method 'getProducerStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputDistributor' final or making the method 'getProducerStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:136:5: Class 'InputDistributor' looks like designed for extension (can be subclassed), but the method 'setProducerStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputDistributor' final or making the method 'setProducerStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:140:5: Class 'InputDistributor' looks like designed for extension (can be subclassed), but the method 'getProducers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputDistributor' final or making the method 'getProducers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:144:5: Class 'InputDistributor' looks like designed for extension (can be subclassed), but the method 'setProducers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputDistributor' final or making the method 'setProducers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:148:5: Class 'InputDistributor' looks like designed for extension (can be subclassed), but the method 'getContractCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputDistributor' final or making the method 'getContractCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:152:5: Class 'InputDistributor' looks like designed for extension (can be subclassed), but the method 'setContractCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputDistributor' final or making the method 'setContractCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:208:5: Class 'InputDistributor' looks like designed for extension (can be subclassed), but the method 'calculateProductionCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputDistributor' final or making the method 'calculateProductionCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:208:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:216:61: '10' is a magic number. [MagicNumber]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:219:5: Class 'InputDistributor' looks like designed for extension (can be subclassed), but the method 'update' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputDistributor' final or making the method 'update' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:219:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:229:61: '&&' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:237:21: '}' at column 21 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:248:5: Class 'InputDistributor' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputDistributor' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:250:36: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:251:28: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:252:38: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:253:50: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:254:46: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:255:44: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:256:54: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:257:62: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:258:54: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:259:54: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:260:44: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\distributor\InputDistributor.java:261:58: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\input\Input.java:45:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getEnergyProducers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getEnergyProducers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\input\Input.java:49:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'setEnergyProducers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'setEnergyProducers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\input\Input.java:91:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getProducer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getProducer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\input\Input.java:91:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\input\Input.java:126:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\input\Input.java:128:25: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\input\Input.java:129:50: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\input\Input.java:130:46: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\input\Input.java:131:52: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\input\Input.java:132:58: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\input\Input.java:133:56: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\input\InputLoader.java:80:53: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\input\InputLoader.java:129: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\input\InputLoader.java:206:22: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:9:8: Unused import - java.util.Iterator. [UnusedImports]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:26: Line is longer than 100 characters (found 132). [LineLength]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:26:5: Class 'InputProducer' looks like designed for extension (can be subclassed), but the method 'insertInitialData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputProducer' final or making the method 'insertInitialData' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:26:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:26:40: 'id' hides a field. [HiddenField]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:26:55: 'energyType' hides a field. [HiddenField]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:26:72: 'maxDistributors' hides a field. [HiddenField]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:26:96: 'priceKW' hides a field. [HiddenField]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:26:110: 'energyPerDistributor' hides a field. [HiddenField]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:36:5: Class 'InputProducer' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputProducer' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:40:5: Class 'InputProducer' looks like designed for extension (can be subclassed), but the method 'getEnergyType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputProducer' final or making the method 'getEnergyType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:44:5: Class 'InputProducer' looks like designed for extension (can be subclassed), but the method 'setEnergyType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputProducer' final or making the method 'setEnergyType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:48:5: Class 'InputProducer' looks like designed for extension (can be subclassed), but the method 'getMaxDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputProducer' final or making the method 'getMaxDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:52:5: Class 'InputProducer' looks like designed for extension (can be subclassed), but the method 'setMaxDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputProducer' final or making the method 'setMaxDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:56:5: Class 'InputProducer' looks like designed for extension (can be subclassed), but the method 'getPriceKW' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputProducer' final or making the method 'getPriceKW' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:60:5: Class 'InputProducer' looks like designed for extension (can be subclassed), but the method 'setPriceKW' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputProducer' final or making the method 'setPriceKW' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:64:5: Class 'InputProducer' looks like designed for extension (can be subclassed), but the method 'getEnergyPerDistributor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputProducer' final or making the method 'getEnergyPerDistributor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:68:5: Class 'InputProducer' looks like designed for extension (can be subclassed), but the method 'setEnergyPerDistributor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputProducer' final or making the method 'setEnergyPerDistributor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:72:5: Class 'InputProducer' looks like designed for extension (can be subclassed), but the method 'getMonthlyStats' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputProducer' final or making the method 'getMonthlyStats' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:76:5: Class 'InputProducer' looks like designed for extension (can be subclassed), but the method 'setMonthlyStats' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputProducer' final or making the method 'setMonthlyStats' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:80:5: Class 'InputProducer' looks like designed for extension (can be subclassed), but the method 'getDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputProducer' final or making the method 'getDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:84:5: Class 'InputProducer' looks like designed for extension (can be subclassed), but the method 'setDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputProducer' final or making the method 'setDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:88:5: Class 'InputProducer' looks like designed for extension (can be subclassed), but the method 'addObserver' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputProducer' final or making the method 'addObserver' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:88:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:92:5: Class 'InputProducer' looks like designed for extension (can be subclassed), but the method 'setChanged' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputProducer' final or making the method 'setChanged' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:92:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:94:32: 'distributors' hides a field. [HiddenField]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:103:5: Class 'InputProducer' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputProducer' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:105:28: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:106:28: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:107:46: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:108:56: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:109:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:110:66: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\InputProducer.java:111:50: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\MonthlyStat.java:14:5: Class 'MonthlyStat' looks like designed for extension (can be subclassed), but the method 'getMonth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MonthlyStat' final or making the method 'getMonth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\MonthlyStat.java:18:5: Class 'MonthlyStat' looks like designed for extension (can be subclassed), but the method 'setMonth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MonthlyStat' final or making the method 'setMonth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\MonthlyStat.java:22:5: Class 'MonthlyStat' looks like designed for extension (can be subclassed), but the method 'getDistributorsIds' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MonthlyStat' final or making the method 'getDistributorsIds' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\MonthlyStat.java:26:5: Class 'MonthlyStat' looks like designed for extension (can be subclassed), but the method 'setDistributorsIds' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MonthlyStat' final or making the method 'setDistributorsIds' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\MonthlyStat.java:30:5: Class 'MonthlyStat' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MonthlyStat' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\MonthlyStat.java:32:31: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\MonthlyStat.java:33:34: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\MonthlyStat.java:34:56: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\MonthlyStat.java:35:20: '+' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\MonthlyStat.java:35:20: '+' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\producer\ProducerFactory.java:3:1: Class ProducerFactory should be declared as final. [FinalClass]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\strategies\EnergyChoiceStrategyType.java:11:25: Variable 'label' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\strategies\EnergyStrategy.java:8:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\strategies\EnergyStrategyFactory.java:4:50: Using the '.*' form of import should be avoided - strategies.EnergyChoiceStrategyType.*. [AvoidStarImport]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\strategies\EnergyStrategyFactory.java:7:5: Class 'EnergyStrategyFactory' looks like designed for extension (can be subclassed), but the method 'createStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'EnergyStrategyFactory' final or making the method 'createStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\strategies\EnergyStrategyFactory.java:7:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\strategies\EnergyStrategyFactory.java:8:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\strategies\EnergyStrategyFactory.java:10:16: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\strategies\EnergyStrategyFactory.java:12:16: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\strategies\GreenStrategy.java:12:18: Name 'THRESHOLD' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\strategies\GreenStrategy.java:12:18: Variable 'THRESHOLD' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\strategies\GreenStrategy.java:14:5: Class 'GreenStrategy' looks like designed for extension (can be subclassed), but the method 'getBestProducer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GreenStrategy' final or making the method 'getBestProducer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\strategies\GreenStrategy.java:14:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\strategies\GreenStrategy.java:14:78: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\strategies\PriceStrategy.java:10:18: Name 'THRESHOLD' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\strategies\PriceStrategy.java:10:18: Variable 'THRESHOLD' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\strategies\PriceStrategy.java:13:5: Class 'PriceStrategy' looks like designed for extension (can be subclassed), but the method 'getBestProducer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PriceStrategy' final or making the method 'getBestProducer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\strategies\PriceStrategy.java:13:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\strategies\PriceStrategy.java:13:78: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\strategies\QuantityStrategy.java:11:5: Class 'QuantityStrategy' looks like designed for extension (can be subclassed), but the method 'getBestProducer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'QuantityStrategy' final or making the method 'getBestProducer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\strategies\QuantityStrategy.java:11:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\strategies\QuantityStrategy.java:11:78: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\turn\Turn.java:5:8: Unused import - distributor.Distributor. [UnusedImports]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\turn\Turn.java:14:8: Unused import - java.sql.SQLOutput. [UnusedImports]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\turn\Turn.java:69:17: '}' at column 17 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\yasem\OneDrive\Desktop\POO\git\proiect-etapa2\.\src\turn\Turn.java:98: Line is longer than 100 characters (found 102). [LineLength]
Audit done.
Checkstyle ends with 151 errors.
